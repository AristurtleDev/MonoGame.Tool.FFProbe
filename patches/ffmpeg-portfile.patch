diff --git a/buildscripts/vcpkg/ports/ffmpeg/portfile.cmake b/buildscripts/vcpkg/ports/ffmpeg/portfile.cmake
index 3d64bf64a..d7d5bd48e 100644
--- a/buildscripts/vcpkg/ports/ffmpeg/portfile.cmake
+++ b/buildscripts/vcpkg/ports/ffmpeg/portfile.cmake
@@ -161,357 +161,36 @@ file(REMOVE_RECURSE "${CURRENT_BUILDTREES_DIR}/${TARGET_TRIPLET}-dbg" "${CURRENT
 
 set(FFMPEG_PKGCONFIG_MODULES libavutil)
 
-if("nonfree" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-nonfree")
-endif()
-
-if("gpl" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-gpl")
-endif()
-
-if("version3" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-version3")
-endif()
-
-if("ffmpeg" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-ffmpeg")
-else()
-    set(OPTIONS "${OPTIONS} --disable-ffmpeg")
-endif()
-
-if("ffplay" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-ffplay")
-else()
-    set(OPTIONS "${OPTIONS} --disable-ffplay")
-endif()
-
-if("ffprobe" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-ffprobe")
-else()
-    set(OPTIONS "${OPTIONS} --disable-ffprobe")
-endif()
-
-if("avcodec" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-avcodec")
-    set(ENABLE_AVCODEC ON)
-    list(APPEND FFMPEG_PKGCONFIG_MODULES libavcodec)
-else()
-    set(OPTIONS "${OPTIONS} --disable-avcodec")
-    set(ENABLE_AVCODEC OFF)
-endif()
-
-if("avdevice" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-avdevice")
-    set(ENABLE_AVDEVICE ON)
-    list(APPEND FFMPEG_PKGCONFIG_MODULES libavdevice)
-else()
-    set(OPTIONS "${OPTIONS} --disable-avdevice")
-    set(ENABLE_AVDEVICE OFF)
-endif()
-
-if("avformat" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-avformat")
-    set(ENABLE_AVFORMAT ON)
-    list(APPEND FFMPEG_PKGCONFIG_MODULES libavformat)
-else()
-    set(OPTIONS "${OPTIONS} --disable-avformat")
-    set(ENABLE_AVFORMAT OFF)
-endif()
-
-if("avfilter" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-avfilter")
-    set(ENABLE_AVFILTER ON)
-    list(APPEND FFMPEG_PKGCONFIG_MODULES libavfilter)
-else()
-    set(OPTIONS "${OPTIONS} --disable-avfilter")
-    set(ENABLE_AVFILTER OFF)
-endif()
-
-if("postproc" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-postproc")
-    set(ENABLE_POSTPROC ON)
-    list(APPEND FFMPEG_PKGCONFIG_MODULES libpostproc)
-else()
-    set(OPTIONS "${OPTIONS} --disable-postproc")
-    set(ENABLE_POSTPROC OFF)
-endif()
-
-if("swresample" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-swresample")
-    set(ENABLE_SWRESAMPLE ON)
-    list(APPEND FFMPEG_PKGCONFIG_MODULES libswresample)
-else()
-    set(OPTIONS "${OPTIONS} --disable-swresample")
-    set(ENABLE_SWRESAMPLE OFF)
-endif()
-
-if("swscale" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-swscale")
-    set(ENABLE_SWSCALE ON)
-    list(APPEND FFMPEG_PKGCONFIG_MODULES libswscale)
-else()
-    set(OPTIONS "${OPTIONS} --disable-swscale")
-    set(ENABLE_SWSCALE OFF)
-endif()
-
 set(STATIC_LINKAGE OFF)
 if(VCPKG_LIBRARY_LINKAGE STREQUAL "static")
     set(STATIC_LINKAGE ON)
 endif()
 
-if ("alsa" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-alsa")
-else()
-    set(OPTIONS "${OPTIONS} --disable-alsa")
-endif()
-
-if("amf" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-amf")
-else()
-    set(OPTIONS "${OPTIONS} --disable-amf")
-endif()
-
-if("aom" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-libaom")
-else()
-    set(OPTIONS "${OPTIONS} --disable-libaom")
-endif()
-
-if("ass" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-libass")
-else()
-    set(OPTIONS "${OPTIONS} --disable-libass")
-endif()
-
-if("avisynthplus" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-avisynth")
-else()
-    set(OPTIONS "${OPTIONS} --disable-avisynth")
-endif()
-
-if("bzip2" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-bzlib")
-else()
-    set(OPTIONS "${OPTIONS} --disable-bzlib")
-endif()
-
-if("dav1d" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-libdav1d")
-else()
-    set(OPTIONS "${OPTIONS} --disable-libdav1d")
-endif()
-
-if("fdk-aac" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-libfdk-aac")
-else()
-    set(OPTIONS "${OPTIONS} --disable-libfdk-aac")
-endif()
-
-if("fontconfig" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-libfontconfig")
-else()
-    set(OPTIONS "${OPTIONS} --disable-libfontconfig")
-endif()
-
-if("freetype" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-libfreetype")
-else()
-    set(OPTIONS "${OPTIONS} --disable-libfreetype")
-endif()
-
-if("fribidi" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-libfribidi")
-else()
-    set(OPTIONS "${OPTIONS} --disable-libfribidi")
-endif()
-
-if("iconv" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-iconv")
-else()
-    set(OPTIONS "${OPTIONS} --disable-iconv")
-endif()
-
-if("ilbc" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-libilbc")
-else()
-    set(OPTIONS "${OPTIONS} --disable-libilbc")
-endif()
-
-if("lzma" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-lzma")
-else()
-    set(OPTIONS "${OPTIONS} --disable-lzma")
-endif()
-
-if("mp3lame" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-libmp3lame")
-else()
-    set(OPTIONS "${OPTIONS} --disable-libmp3lame")
-endif()
-
-if("modplug" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-libmodplug")
-else()
-    set(OPTIONS "${OPTIONS} --disable-libmodplug")
-endif()
-
-if("nvcodec" IN_LIST FEATURES)
-    #Note: the --enable-cuda option does not actually require the cuda sdk or toolset port dependency as ffmpeg uses runtime detection and dynamic loading
-    set(OPTIONS "${OPTIONS} --enable-cuda --enable-nvenc --enable-nvdec --enable-cuvid --enable-ffnvcodec")
-else()
-    set(OPTIONS "${OPTIONS} --disable-cuda --disable-nvenc --disable-nvdec  --disable-cuvid --disable-ffnvcodec")
-endif()
-
-if("opencl" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-opencl")
-else()
-    set(OPTIONS "${OPTIONS} --disable-opencl")
-endif()
-
-if("opengl" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-opengl")
-else()
-    set(OPTIONS "${OPTIONS} --disable-opengl")
-endif()
-
-if("openh264" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-libopenh264")
-else()
-    set(OPTIONS "${OPTIONS} --disable-libopenh264")
-endif()
-
-if("openjpeg" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-libopenjpeg")
-else()
-    set(OPTIONS "${OPTIONS} --disable-libopenjpeg")
-endif()
-
-if("openmpt" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-libopenmpt")
-else()
-    set(OPTIONS "${OPTIONS} --disable-libopenmpt")
-endif()
-
-if("openssl" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-openssl")
-else()
-    set(OPTIONS "${OPTIONS} --disable-openssl")
-    if(VCPKG_TARGET_IS_WINDOWS AND NOT VCPKG_TARGET_IS_UWP)
-        string(APPEND OPTIONS " --enable-schannel")
-    elseif(VCPKG_TARGET_IS_OSX)
-        string(APPEND OPTIONS " --enable-securetransport")
-    elseif(VCPKG_TARGET_IS_IOS)
-        string(APPEND OPTIONS " --enable-securetransport")
-    endif()
-endif()
-
-if("opus" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-libopus")
-else()
-    set(OPTIONS "${OPTIONS} --disable-libopus")
-endif()
-
-if("sdl2" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-sdl2")
-else()
-    set(OPTIONS "${OPTIONS} --disable-sdl2")
-endif()
-
-if("snappy" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-libsnappy")
-else()
-    set(OPTIONS "${OPTIONS} --disable-libsnappy")
-endif()
-
-if("soxr" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-libsoxr")
-else()
-    set(OPTIONS "${OPTIONS} --disable-libsoxr")
-endif()
-
-if("speex" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-libspeex")
-else()
-    set(OPTIONS "${OPTIONS} --disable-libspeex")
-endif()
-
-if("ssh" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-libssh")
-else()
-    set(OPTIONS "${OPTIONS} --disable-libssh")
-endif()
-
-if("tensorflow" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-libtensorflow")
-else()
-    set(OPTIONS "${OPTIONS} --disable-libtensorflow")
-endif()
-
-if("tesseract" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-libtesseract")
-else()
-    set(OPTIONS "${OPTIONS} --disable-libtesseract")
-endif()
-
-if("theora" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-libtheora")
-else()
-    set(OPTIONS "${OPTIONS} --disable-libtheora")
-endif()
-
-if("vorbis" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-libvorbis")
-else()
-    set(OPTIONS "${OPTIONS} --disable-libvorbis")
-endif()
-
-if("vpx" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-libvpx")
-else()
-    set(OPTIONS "${OPTIONS} --disable-libvpx")
-endif()
-
-if("webp" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-libwebp")
-else()
-    set(OPTIONS "${OPTIONS} --disable-libwebp")
-endif()
-
-if("x264" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-libx264")
-else()
-    set(OPTIONS "${OPTIONS} --disable-libx264")
-endif()
-
-if("x265" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-libx265")
-else()
-    set(OPTIONS "${OPTIONS} --disable-libx265")
-endif()
-
-if("xml2" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-libxml2")
-else()
-    set(OPTIONS "${OPTIONS} --disable-libxml2")
-endif()
-
-if("zlib" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-zlib")
-else()
-    set(OPTIONS "${OPTIONS} --disable-zlib")
-endif()
-
-if ("srt" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-libsrt")
-else()
-    set(OPTIONS "${OPTIONS} --disable-libsrt")
-endif()
-
-if ("qsv" IN_LIST FEATURES)
-    set(OPTIONS "${OPTIONS} --enable-libmfx --enable-encoder=h264_qsv --enable-decoder=h264_qsv")   
-else()
-    set(OPTIONS "${OPTIONS} --disable-libmfx")
-endif()
+################################################################################
+### MonoGame Patch Notes
+### All feature checks have been removed and only the encoders, decoders, muxers
+### and libraries needed for the MonoGame specific binaries have been enabled
+### below.
+################################################################################
+string(APPEND OPTIONS " --disable-ffmpeg --enable-ffprobe --disable-ffplay")
+string(APPEND OPTIONS " --disable-encoders --disable-muxers")
+string(APPEND OPTIONS " --disable-network")
+string(APPEND OPTIONS " --enable-encoder=pcm_u8")
+string(APPEND OPTIONS " --enable-encoder=pcm_f32le")
+string(APPEND OPTIONS " --enable-encoder=pcm_s16le")
+string(APPEND OPTIONS " --enable-encoder=adpcm_ms")
+string(APPEND OPTIONS " --enable-encoder=wmav2")
+string(APPEND OPTIONS " --enable-encoder=adpcm_ima_wav")
+string(APPEND OPTIONS " --enable-encoder=aac")
+string(APPEND OPTIONS " --enable-encoder=mp4")
+string(APPEND OPTIONS " --enable-encoder=wmv")
+string(APPEND OPTIONS " --enable-muxer=wav")
+string(APPEND OPTIONS " --enable-muxer=asf")
+string(APPEND OPTIONS " --enable-muxer=ipod")
+string(APPEND OPTIONS " --enable-muxer=ogg")
+string(APPEND OPTIONS " --enable-muxer=mp3")
+string(APPEND OPTIONS " --enable-libvorbis")
+string(APPEND OPTIONS " --enable-libmp3lame")
 
 set(OPTIONS_CROSS "--enable-cross-compile")
 
@@ -686,15 +365,12 @@ if(VCPKG_TARGET_IS_WINDOWS)
     endif()
 endif()
 
-if("ffmpeg" IN_LIST FEATURES)
-    vcpkg_copy_tools(TOOL_NAMES ffmpeg AUTO_CLEAN)
-endif()
-if("ffprobe" IN_LIST FEATURES)
-    vcpkg_copy_tools(TOOL_NAMES ffprobe AUTO_CLEAN)
-endif()
-if("ffplay" IN_LIST FEATURES)
-    vcpkg_copy_tools(TOOL_NAMES ffplay AUTO_CLEAN)
-endif()
+################################################################################
+### MonoGame Patch Notes
+### check for ffmpeg, ffprobe, and ffplay removed and always assumed that ffprob
+### is enabled
+################################################################################
+vcpkg_copy_tools(TOOL_NAMES ffprobe AUTO_CLEAN)
 
 file(REMOVE_RECURSE "${CURRENT_PACKAGES_DIR}/debug/include" "${CURRENT_PACKAGES_DIR}/debug/share")
 
